#!/usr/bin/env bash

# Try to autodetect real location of the script
if [ -z "${PROG_HOME-}" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi

source "$PROG_HOME/bin/common"

[ -z "$PROG_NAME" ] && PROG_NAME=$CompilerMain

prepScalacCommandLine "$@"

# exec here would prevent onExit from being called, leaving terminal in unusable state
[ -n "$script_trace" ] && set -x
eval "\"$JAVACMD\"" \
     ${JAVA_OPTS:-$default_java_opts} \
     "${DEBUG-}" \
     "${java_args[@]}" \
     "-classpath \"$jvm_cp_args\"" \
     -Dscala.usejavacp=true \
     "$PROG_NAME"  \
     "${scala_args[@]}" \
     "${residual_args[@]}" \
     "${scripting_string-}"
scala_exit_status=$?

