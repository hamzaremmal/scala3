#!/usr/bin/env bash

IFS=""
# Try to autodetect real location of the script

if [ -z "$PROG_HOME" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi

source "$PROG_HOME/bin/common"

CLASS_PATH=".$PSEP$DOTTY_LIB$PSEP$SCALA_LIB"

addResidual () {
  residual_args+=("$1")
}

addCustomClassPath () {
  classpath_args+=("$1:")
}

run_repl=false

while [[ $# -gt 0 ]]; do
key=$1
case $key in
        -repl)
         run_repl=true
         shift
         ;;
        -classpath)
          addCustomClassPath "$2"
          shift
          shift
          ;;
        -d)
        DEBUG="$DEBUG_STR"
         shift
         ;;
         *)
           addResidual "$1"
           shift
           ;;

  esac
done

if [ $run_repl == true ]; then
    echo "Starting dotty REPL"
    if [ -z $classpath_args ]; then
        classpath_args=""
    else
        classpath_args="-classpath \"${classpath_args[*]}\""
    fi
    eval "$PROG_HOME/bin/dotc $classpath_args -repl ${residual_args[@]}"
elif [ -z $residual_args ]; then
    echo "Starting dotty REPL..."
    eval "$PROG_HOME/bin/dotc -repl"
else
    CLASS_PATH="${classpath_args[*]}$CLASS_PATH"
    eval exec "\"$JAVACMD\"" "$DEBUG" "-classpath \"$CLASS_PATH\"" "${residual_args[@]}"
fi
