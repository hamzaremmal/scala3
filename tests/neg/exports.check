-- Error: tests/neg/exports.scala:21:20 --------------------------------------------------------------------------------
21 |    export scanUnit.scanIt          // error: no eligible member
   |                    ^^^^^^
   |                    no eligible member scanIt at this.scanUnit
-- Error: tests/neg/exports.scala:22:29 --------------------------------------------------------------------------------
22 |    export scanUnit.{scanAll => foo} // error: no eligible member
   |                     ^^^^^^^^^^^^^^
   |                     no eligible member scanAll at this.scanUnit
   |                     this.scanUnit.scanAll cannot be exported because it is not accessible
-- [E120] Naming Error: tests/neg/exports.scala:28:8 -------------------------------------------------------------------
28 |    def status: List[String] = printUnit.status ++ scanUnit.status // error: double definition w/ printUnit.status
   |        ^
   |        Double definition:
   |        final def status: List[String] in class Copier at line 23 and
   |        def status: List[String] in class Copier at line 28
   |        have the same type after erasure.
   |
   |        Consider adding a @targetName annotation to one of the conflicting definitions
   |        for disambiguation.
-- [E120] Naming Error: tests/neg/exports.scala:23:33 ------------------------------------------------------------------
23 |    export printUnit.{stat => _, _} // error: double definition
   |                                 ^
   |                                 Double definition:
   |                                 final def status: List[String] in class Copier at line 24 and
   |                                 final def status: List[String] in class Copier at line 23
   |                                 have the same type after erasure.
   |
   |                                 Consider adding a @targetName annotation to one of the conflicting definitions
   |                                 for disambiguation.
-- [E120] Naming Error: tests/neg/exports.scala:24:20 ------------------------------------------------------------------
24 |    export scanUnit._               // error: double definition
   |                    ^
   |                    Double definition:
   |                    final def status: List[String] in class Copier at line 26 and
   |                    final def status: List[String] in class Copier at line 24
   |                    have the same type after erasure.
   |
   |                    Consider adding a @targetName annotation to one of the conflicting definitions
   |                    for disambiguation.
-- Error: tests/neg/exports.scala:35:24 --------------------------------------------------------------------------------
35 |    export this.{concat => ++}   // error: no eligible member
   |                 ^^^^^^^^^^^^
   |                 no eligible member concat at this
   |                 this.concat cannot be exported because it is already a member of trait IterableOps
-- Error: tests/neg/exports.scala:41:15 --------------------------------------------------------------------------------
41 |    export foo.foo // error: no eligible member
   |               ^^^
   |               no eligible member foo at this.foo
   |               this.foo.foo cannot be exported because it is already a member of class Foo
-- [E083] Type Error: tests/neg/exports.scala:57:11 --------------------------------------------------------------------
57 |    export printer.*  // error: not stable
   |           ^^^^^^^
   |           (No.printer : => Printer) is not a valid export prefix, since it is not an immutable path
   |
   | longer explanation available when compiling with `-explain`
