-- Error: tests/neg/existential-mapping.scala:44:13 --------------------------------------------------------------------
44 |  val z1: A^ => Array[C^] = ??? // error
   |          ^^^^^^^^^^^^^^^
   |          Array[box C^] captures the root capability `cap` in invariant position
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:9:25 ------------------------------------------------
9 |  val _:  (x: C^) -> C = x1 // error
  |                         ^^
  |                         Found:    (x1 : (x: C^) -> (ex$3: caps.Exists) -> C^{ex$3})
  |                         Required: (x: C^) -> C
  |
  | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:12:20 -----------------------------------------------
12 |  val _:  C^ -> C = x2 // error
   |                    ^^
   |                    Found:    (x2 : C^ -> (ex$9: caps.Exists) -> C^{ex$9})
   |                    Required: C^ -> C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:15:30 -----------------------------------------------
15 |  val _: A^ -> (x: C^) -> C = x3 // error
   |                              ^^
   |                              Found:    (x3 : A^ -> (x: C^) -> (ex$15: caps.Exists) -> C^{ex$15})
   |                              Required: A^ -> (x: C^) -> C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:18:25 -----------------------------------------------
18 |  val _: A^ -> C^ -> C = x4 // error
   |                         ^^
   |                         Found:    (x4 : A^ -> C^ -> (ex$25: caps.Exists) -> C^{ex$25})
   |                         Required: A^ -> C^ -> C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:21:30 -----------------------------------------------
21 |  val _: A^ -> (x: C^) -> C = x5 // error
   |                              ^^
   |                              Found:    (x5 : A^ -> (ex$35: caps.Exists) -> Fun[C^{ex$35}])
   |                              Required: A^ -> (x: C^) -> C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:24:30 -----------------------------------------------
24 |  val _: A^ -> (x: C^) => C = x6 // error
   |                              ^^
   |                              Found:    (x6 : A^ -> (ex$43: caps.Exists) -> IFun[C^{ex$43}])
   |                              Required: A^ -> (ex$48: caps.Exists) -> (x: C^) ->{ex$48} C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:27:25 -----------------------------------------------
27 |  val _:  (x: C^) => C = y1 // error
   |                         ^^
   |                         Found:    (y1 : (x: C^) => (ex$54: caps.Exists) -> C^{ex$54})
   |                         Required: (x: C^) => C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:30:20 -----------------------------------------------
30 |  val _:  C^ => C = y2 // error
   |                    ^^
   |                    Found:    (y2 : C^ => (ex$60: caps.Exists) -> C^{ex$60})
   |                    Required: C^ => C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:33:30 -----------------------------------------------
33 |  val _: A^ => (x: C^) => C = y3 // error
   |                              ^^
   |              Found:    (y3 : A^ => (ex$67: caps.Exists) -> (x: C^) ->{ex$67} (ex$66: caps.Exists) -> C^{ex$66})
   |              Required: A^ => (ex$78: caps.Exists) -> (x: C^) ->{ex$78} C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:36:25 -----------------------------------------------
36 |  val _: A^ => C^ => C = y4 // error
   |                         ^^
   |                         Found:    (y4 : A^ => C^ => (ex$84: caps.Exists) -> C^{ex$84})
   |                         Required: A^ => C^ => C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:39:30 -----------------------------------------------
39 |  val _: A^ => (x: C^) -> C = y5 // error
   |                              ^^
   |                              Found:    (y5 : A^ => (ex$94: caps.Exists) -> Fun[C^{ex$94}])
   |                              Required: A^ => (x: C^) -> C
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg/existential-mapping.scala:42:30 -----------------------------------------------
42 |  val _: A^ => (x: C^) => C = y6 // error
   |                              ^^
   |                              Found:    (y6 : A^ => (ex$102: caps.Exists) -> IFun[C^{ex$102}])
   |                              Required: A^ => (ex$107: caps.Exists) -> (x: C^) ->{ex$107} C
   |
   | longer explanation available when compiling with `-explain`
