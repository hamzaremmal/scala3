
tree: Term.Block(Nil, Term.Literal(Constant.Int(3)))
tree deref. vals: Term.Literal(Constant.Int(3))

tree: Term.Block(Nil, Term.Ident("v"))
tree deref. vals: Term.Literal(Constant.Int(1))

tree: Term.Block(Nil, Term.Ident("x"))
tree deref. vals: Term.Literal(Constant.Int(2))

tree: Term.Block(Nil, Term.Ident("l"))
tree deref. vals: Term.Literal(Constant.Int(3))

tree: Term.Block(Nil, Term.Ident("a"))
tree deref. vals: Term.Ident("a")

tree: Term.Block(Nil, Term.Ident("x"))
tree deref. vals: Term.Ident("b")

tree: Term.Block(Nil, Term.Ident("vv"))
tree deref. vals: Term.Literal(Constant.Int(1))

tree: Term.Block(Nil, Term.Ident("x"))
tree deref. vals: Term.Literal(Constant.Int(1))

tree: Term.Block(Nil, Term.Ident("vd"))
tree deref. vals: Term.Literal(Constant.Int(2))

tree: Term.Block(Nil, Term.Ident("x"))
tree deref. vals: Term.Literal(Constant.Int(2))

tree: Term.Block(Nil, Term.Ident("x"))
tree deref. vals: Term.Apply(Term.TypeApply(Term.Select(Term.Ident("Tuple2"), "apply"), List(TypeTree.Inferred(), TypeTree.Inferred())), List(Term.Literal(Constant.Int(1)), Term.Literal(Constant.Int(2))))
