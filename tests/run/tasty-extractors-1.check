Literal(Boolean(true))
ConstantType(Boolean(true))

Literal(Int(1))
ConstantType(Int(1))

Literal(Long(2))
ConstantType(Long(2))

Literal(Float(2.1))
ConstantType(Float(2.1))

Literal(Double(2.2))
ConstantType(Double(2.2))

Literal(String(abc))
ConstantType(String(abc))

Apply(Ident(println), List(Literal(String(abc))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Typed(Literal(Int(8)), TypeIdent(Int))
SymRef(Int, SymRef(scala, ThisType(SymRef(<root>, NoPrefix))))

Typed(Literal(Byte(8)), TypeIdent(Byte))
SymRef(Byte, SymRef(scala, ThisType(SymRef(<root>, NoPrefix))))

Typed(Literal(Short(8)), TypeIdent(Short))
SymRef(Short, SymRef(scala, ThisType(SymRef(<root>, NoPrefix))))

Literal(Char(a))
ConstantType(Char(a))

Block(List(Literal(Int(1)), Literal(Int(2))), Literal(Int(3)))
ConstantType(Int(3))

If(Typed(Literal(Boolean(true)), TypeIdent(Boolean)), Literal(Int(1)), Literal(Int(2)))
SymRef(Int, ThisType(SymRef(scala, NoPrefix)))

Match(Literal(String(a)), List(CaseDef(Value(Literal(String(a))), None, Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Match(Literal(String(b)), List(CaseDef(Bind(n, Value(Ident(_))), None, Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Match(Literal(String(c)), List(CaseDef(Bind(n, TypeTest(TypeIdent(String))), None, Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Match(Literal(String(e)), List(CaseDef(Value(Ident(_)), None, Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Match(Literal(String(f)), List(CaseDef(TypeTest(TypeIdent(String)), None, Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Match(Typed(Literal(String(g)), TypeIdent(Any)), List(CaseDef(Alternative(List(TypeTest(TypeIdent(String)), TypeTest(TypeIdent(Int)))), None, Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Match(Literal(String(h)), List(CaseDef(Value(Ident(_)), Some(Literal(Boolean(false))), Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(ValDef(a, Synthetic(), Some(Literal(String(o))))), Match(Literal(String(i)), List(CaseDef(Bind(a, Value(Ident(_))), None, Block(Nil, Literal(Unit()))))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Match(Ident(Nil), List(CaseDef(Unapply(TypeApply(Select(Ident(List), unapplySeq, Some(Signature(List(scala.collection.Seq), scala.Some))), List(Synthetic())), Nil, List(Bind(a, Value(Ident(_))), Bind(b, Value(Ident(_))), Bind(c, Value(Ident(_))))), None, Block(Nil, Literal(Unit())))))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Try(Literal(Int(1)), List(CaseDef(Value(Ident(_)), None, Block(Nil, Literal(Unit())))), None)
OrType(SymRef(Int, ThisType(SymRef(scala, NoPrefix))), SymRef(Unit, ThisType(SymRef(scala, NoPrefix))))

Try(Literal(Int(2)), Nil, Some(Literal(Unit())))
ConstantType(Int(2))

Try(Literal(Int(3)), List(CaseDef(Value(Ident(_)), None, Block(Nil, Literal(Unit())))), Some(Literal(Unit())))
OrType(SymRef(Int, ThisType(SymRef(scala, NoPrefix))), SymRef(Unit, ThisType(SymRef(scala, NoPrefix))))

Apply(Select(Literal(String(a)), ==, Some(Signature(List(java.lang.Object), scala.Boolean))), List(Literal(String(b))))
SymRef(Boolean, ThisType(SymRef(scala, NoPrefix)))

Apply(Select(New(TypeIdent(Object)), <init>, Some(Signature(Nil, java.lang.Object))), Nil)
SymRef(Object, ThisType(SymRef(lang, NoPrefix)))

Apply(Select(Ident(Int), box, Some(Signature(List(scala.Int), java.lang.Integer))), List(NamedArg(x, Literal(Int(9)))))
SymRef(Integer, ThisType(SymRef(lang, NoPrefix)))

Apply(TypeApply(Select(Ident(Ordering), apply, Some(Signature(List(scala.math.Ordering), scala.math.Ordering))), List(TypeIdent(Int))), List(Ident(Int)))
AppliedType(SymRef(Ordering, ThisType(SymRef(math, NoPrefix))), List(SymRef(Int, SymRef(scala, ThisType(SymRef(<root>, NoPrefix))))))

Block(List(ValDef(a, TypeIdent(Int), Some(Literal(Int(3))))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(ValDef(b, TypeIdent(Int), Some(Literal(Int(3))))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f1, Nil, Nil, TypeIdent(Int), Some(Literal(Int(3))))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f2, Nil, Nil, TypeIdent(Int), Some(Return(Literal(Int(4)))))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f3, Nil, List(List(ValDef(i, TypeIdent(Int), None))), TypeIdent(Int), Some(Ident(i)))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f4, Nil, List(List(ValDef(i, TypeIdent(Int), None)), List(ValDef(j, TypeIdent(Int), None))), TypeIdent(Int), Some(Apply(Select(Ident(i), +, Some(Signature(List(scala.Int), scala.Int))), List(Ident(j)))))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f5, Nil, List(List(ValDef(i, TypeIdent(Int), None))), TypeIdent(Int), Some(Ident(i))), DefDef(f5$default$1, Nil, Nil, Synthetic(), Some(Literal(Int(9))))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f6, List(TypeDef(T, TypeBoundsTree(Synthetic(), Synthetic()))), List(List(ValDef(x, TypeIdent(T), None))), TypeIdent(T), Some(Ident(x)))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f7, List(TypeDef(T, TypeBoundsTree(Synthetic(), Synthetic()))), List(List(ValDef(x, TypeIdent(T), None))), Singleton(Ident(x)), Some(Ident(x)))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

Block(List(DefDef(f8, Nil, List(List(ValDef(i, Annotated(Applied(Synthetic(), List(TypeIdent(Int))), Apply(Select(New(Synthetic()), <init>, Some(Signature(Nil, scala.annotation.internal.Repeated))), Nil)), None))), TypeIdent(Int), Some(Literal(Int(9))))), Apply(Ident(f8), List(Typed(Repeated(List(Literal(Int(1)), Literal(Int(2)), Literal(Int(3)))), Synthetic()))))
SymRef(Int, SymRef(scala, ThisType(SymRef(<root>, NoPrefix))))

Block(List(DefDef(f9, Nil, List(List(ValDef(i, ByName(TypeIdent(Int)), None))), TypeIdent(Int), Some(Ident(i)))), Literal(Unit()))
SymRef(Unit, ThisType(SymRef(scala, NoPrefix)))

