-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/try.scala:23:49 ------------------------------------------
23 |  val a = handle[Exception, CanThrow[Exception]] { // error
   |                                                 ^
   |Found:    (lcap: caps.Cap) ?->? (x$0: CT[Exception]^{lcap}) ->? box CT[Exception]^{lcap}
   |Required: (lcap: caps.Cap) ?-> CT[Exception]^{lcap} ->{'cap[..test](from instantiating handle)} box CT[Exception]^{cap[test]}
24 |    (x: CanThrow[Exception]) => x
25 |  }{
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/try.scala:30:65 ---------------------------------------------------------------
30 |    (x: CanThrow[Exception]) => () => raise(new Exception)(using x) // error
   |                                                                 ^
   |          (x : CT[Exception]^{lcap}) cannot be referenced here; it is not included in the allowed capture set {}
   |          of an enclosing function literal with expected type () ->? Nothing
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/try.scala:52:2 -------------------------------------------
47 |val global: () -> Int = handle {
48 |  (x: CanThrow[Exception]) =>
49 |    () =>
50 |      raise(new Exception)(using x)
51 |      22
52 |} { // error
   |                        ^
   |                        Found:    () ->{x$0, lcap} Int
   |                        Required: () -> Int
53 |  (ex: Exception) => () => 22
54 |}
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/try.scala:35:11 ---------------------------------------------------------------
35 |  val xx = handle {  // error
   |           ^^^^^^
   |           escaping local reference lcap.type
