-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/reaches.scala:24:11 --------------------------------------
24 |    cur = (() => f.write()) :: Nil // error since {f*} !<: {xs*}
   |           ^^^^^^^^^^^^^^^^^^^^^^^
   |           Found:    List[box () ->{f} Unit]
   |           Required: List[box () ->{xs*} Unit]
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/reaches.scala:35:7 ---------------------------------------
35 |      (() => f.write()) :: Nil // error since {f*} !<: {xs*}
   |       ^^^^^^^^^^^^^^^^^^^^^^^
   |       Found:    List[box () ->{f} Unit]
   |       Required: box List[box () ->{xs*} Unit]^?
   |
   |       Note that reference (f : File^), defined in method $anonfun
   |       cannot be included in outer capture set {xs*} of value cur
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/reaches.scala:38:6 ------------------------------------------------------------
38 |  var cur: List[Proc] = xs // error: Illegal type for var
   |      ^
   |      Mutable variable cur cannot have type List[box () => Unit] since
   |      the part box () => Unit of that type captures the root capability `cap`.
-- Error: tests/neg-custom-args/captures/reaches.scala:45:15 -----------------------------------------------------------
45 |  val cur = Ref[List[Proc]](xs) // error: illegal type for type argument to Ref
   |            ^^^^^^^^^^^^^^^
   |            Sealed type variable T cannot be instantiated to List[box () => Unit] since
   |            the part box () => Unit of that type captures the root capability `cap`.
   |            This is often caused by a local capability in an argument of constructor Ref
   |            leaking as part of its result.
-- Error: tests/neg-custom-args/captures/reaches.scala:55:31 -----------------------------------------------------------
55 |  val id: Id[Proc, Proc] = new Id[Proc, () -> Unit] // error
   |                               ^^^^^^^^^^^^^^^^^^^^
   |                               Sealed type variable A cannot be instantiated to box () => Unit since
   |                               that type captures the root capability `cap`.
   |                               This is often caused by a local capability in an argument of constructor Id
   |                               leaking as part of its result.
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/reaches.scala:57:6 ---------------------------------------
57 |    id(() => f.write())  // error
   |    ^^^^^^^^^^^^^^^^^^^
   |    Found:    () => Unit
   |    Required: () ->? Unit
   |
   |    Note that the universal capability `cap`
   |    cannot be included in capture set ?
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/reaches.scala:64:27 --------------------------------------
64 |    val f1: File^{id*} = id(f) // error, since now id(f): File^
   |                         ^^^^^
   |                         Found:    File^
   |                         Required: File^{id*}
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/reaches.scala:81:5 ------------------------------------------------------------
81 |  ps.map((x, y) => compose1(x, y)) // error: cannot mix cap and * (should work now) // error // error
   |  ^^^^^^
   |  Reach capability cap and universal capability cap cannot both
   |  appear in the type [B](f: ((box A ->{ps*} A, box A ->{ps*} A)) => B): List[B] of this expression
-- Error: tests/neg-custom-args/captures/reaches.scala:81:10 -----------------------------------------------------------
81 |  ps.map((x, y) => compose1(x, y)) // error: cannot mix cap and * (should work now) // error // error
   |          ^
   |          Local reach capability ps* leaks into capture scope of method mapCompose
-- Error: tests/neg-custom-args/captures/reaches.scala:81:13 -----------------------------------------------------------
81 |  ps.map((x, y) => compose1(x, y)) // error: cannot mix cap and * (should work now) // error // error
   |             ^
   |             Local reach capability ps* leaks into capture scope of method mapCompose
