class Test() {
  val v1: scala.Option[scala.Int] = (if (true) scala.Some.apply[scala.Int](1) else scala.None).map[scala.Int](((v: scala.Int) => v.+(1)))
  val v2: scala.Option[scala.Int] = (try scala.Some.apply[scala.Int](1) finally ()).map[scala.Int](((v: scala.Int) => v.+(1)))
  val v3: scala.Option[scala.Int] = (1 match {
    case _ =>
      scala.Some.apply[scala.Int](1)
  }).map[scala.Int](((v: scala.Int) => v.+(1)))
  val v4: java.lang.String = (while (true) ()).toString()
  def v5: scala.Option[scala.Predef.String] = scala.Some.apply[java.lang.String]((return scala.Some.apply[java.lang.String]("a")).toString())
  def foo(x: scala.Boolean): scala.Boolean = x.unary_!
  def bar(): scala.Int = (if (true) 1 else 2) match {
    case x =>
      (x: scala.Int)
  }
  def baz(): scala.Any = (if (true) ((x: scala.Any) => scala.Predef.identity[scala.Any](x)) else ((x: scala.Any) => scala.Predef.identity[scala.Any](x))).apply(0)
}
