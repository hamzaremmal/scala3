package dotty.tools
package dottydoc
package js

import scala.scalajs.{ js => sjs }
import sjs.JSConverters._
import sjs.Dynamic.global
import sjs.JSApp
import sjs.annotation.JSName

/** The unpickled AST available as scala classes */
object EntityIndex {
  import prickle._
  import dottydoc.model.pickling._
  import js.model._

  lazy val packages: Map[String, Package] =
    Unparsed.packages.toMap[String, Package]

  val currentEntity: dottydoc.model.Entity = Unpickle[dottydoc.model.Entity]
    .fromString(sjs.JSON.stringify(Unparsed.currentEntity))
    .toOption
    .get

  /** Unparsed index stores the pickled AST generated by the dottydoc tool */
  @sjs.native @JSName("UnparsedIndex") private object Unparsed extends sjs.Object {
    def packages: sjs.Dictionary[Package] = sjs.native
    def currentEntity: sjs.Object = sjs.native
  }
}
